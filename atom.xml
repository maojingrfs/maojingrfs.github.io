<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mao Jing</title>
  
  <subtitle>匮乏即是富足，自律产生喜悦！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-09T15:40:04.021Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mao Jing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019整理再出发</title>
    <link href="http://yoursite.com/2019/01/09/2019%E6%95%B4%E7%90%86%E5%86%8D%E5%87%BA%E5%8F%91/"/>
    <id>http://yoursite.com/2019/01/09/2019整理再出发/</id>
    <published>2019-01-09T14:41:38.000Z</published>
    <updated>2019-01-09T15:40:04.021Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/09/2019整理再出发/image1.jpg"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>古时候一个佛学造诣很深的人，去拜访一位德高望重的老禅师。老禅师的徒弟接待他时，他态度傲慢。后来老禅师恭敬地接待了他，并为他沏茶。可在倒水时，明明杯子已经满了，老禅师还不停地倒。他不解地问：“大师，为什么杯子已经满了，还要往里倒？”大师说：“是啊，既然已满了，干吗还倒呢？”访客恍然大悟。</p><a id="more"></a><p>这就是“归零心态”的起源，象征意义是，做事的前提是先要有好心态，如果想要获取更多的知识、技能，获得更大的成就，必须定期给自己的内心清零。</p><p>归零心态要求我们不能沉迷过去的业绩，要调整自己去适应新的变化。归零心态的本质就是挑战自我，永不满足。</p><p>归零的心态。归零的心态就是空杯、谦虚的心态，就是重新开始。第一次成功相对比较容易，第二次却不容易了，原因是不能归零。</p><h6 id="（来自《归零心态》是-2011年1月1日由中国石化出版社出版的图书，作者是张振宗。）"><a href="#（来自《归零心态》是-2011年1月1日由中国石化出版社出版的图书，作者是张振宗。）" class="headerlink" title="（来自《归零心态》是 2011年1月1日由中国石化出版社出版的图书，作者是张振宗。）"></a>（来自《归零心态》是 2011年1月1日由<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E7%9F%B3%E5%8C%96%E5%87%BA%E7%89%88%E7%A4%BE/2814665" target="_blank" rel="noopener">中国石化出版社</a>出版的图书，作者是<a href="https://baike.baidu.com/item/%E5%BC%A0%E6%8C%AF%E5%AE%97" target="_blank" rel="noopener">张振宗</a>。）</h6><h1 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>本来这篇博客应该是第一时间发布，但最终只能穿插着发布了！</p><p>从未想过自己建站来写Blog，可能是打心底受到鲁迅先生的影响–“我也早觉得有写一点东西的必要了”。之前陆陆续续在CSDN，简书和GitHub上写过些东西，主要是记录一些技术心得和Bug修复，但都写的很零散，不成体系。但是最近，来自内心深处的自问越渐明晰—-你到底想做什么？</p><p>于是意识到有必要重新审视下自己，也就是自省吧！话题范围太大，无从下手，那干脆就先从自己会什么着手，好好认识下自己。这样做的目的是为接下来的发展定位提供参考。</p><p>嗯，建站写Blog，这个想法不错。以前的Blog更多是基于Bug驱动的，也就是出了问题就写一下，比较零散。现在我要按照时间倒叙，基于达到一个目，如实现微服务架构，来整理周边知识，达到技术知识的体系化。</p><p>也就是说，要换个思路，重新写Blog。希望能帮到自己。</p><p>嗯，说干就干！</p><p>2019，我在这里整理再出发！</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/09/2019整理再出发/image1.jpg&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;古时候一个佛学造诣很深的人，去拜访一位德高望重的老禅师。老禅师的徒弟接待他时，他态度傲慢。后来老禅师恭敬地接待了他，并为他沏茶。可在倒水时，明明杯子已经满了，老禅师还不停地倒。他不解地问：“大师，为什么杯子已经满了，还要往里倒？”大师说：“是啊，既然已满了，干吗还倒呢？”访客恍然大悟。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="杂记" scheme="http://yoursite.com/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux-远程控制</title>
    <link href="http://yoursite.com/2019/01/09/Linux-%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2019/01/09/Linux-远程控制/</id>
    <published>2019-01-09T12:49:07.000Z</published>
    <updated>2019-01-09T13:12:05.426Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/09/Linux-远程控制/image1.jpg" title="Xshell"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>没有安全作为保障，其它先不谈！</p><a id="more"></a><p>传统的网络服务程序，如：<a href="https://baike.baidu.com/item/ftp" target="_blank" rel="noopener">ftp</a>、pop和<a href="https://baike.baidu.com/item/telnet" target="_blank" rel="noopener">telnet</a>在本质上都是不安全的，因为它们在网络上用<a href="https://baike.baidu.com/item/%E6%98%8E%E6%96%87" target="_blank" rel="noopener">明文</a>传送口令和数据，别有用心的人非常容易就可以截获这些口令和数据。而且，这些服务程序的<a href="https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81" target="_blank" rel="noopener">安全验证</a>方式也是有其弱点的， 就是很容易受到“中间人”（man-in-the-middle）这种方式的攻击。所谓“中间人”的攻击方式， 就是“中间人”冒充真正的<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">服务器</a>接收你传给服务器的数据，然后再冒充你把数据传给真正的服务器。服务器和你之间的数据传送被“中间人”一转手做了手脚之后，就会出现很严重的问题。通过使用SSH，你可以把所有传输的数据进行加密，这样”中间人”这种攻击方式就不可能实现了，而且也能够防止DNS欺骗和IP欺骗。使用SSH，还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的<a href="https://baike.baidu.com/item/%E9%80%9F%E5%BA%A6/5456" target="_blank" rel="noopener">速度</a>。SSH有很多功能，它既可以代替<a href="https://baike.baidu.com/item/Telnet" target="_blank" rel="noopener">Telnet</a>，又可以为<a href="https://baike.baidu.com/item/FTP" target="_blank" rel="noopener">FTP</a>、<a href="https://baike.baidu.com/item/PoP" target="_blank" rel="noopener">PoP</a>、甚至为<a href="https://baike.baidu.com/item/PPP" target="_blank" rel="noopener">PPP</a>提供一个安全的”通道”</p><h1 id="OpenSSH"><a href="#OpenSSH" class="headerlink" title="OpenSSH"></a>OpenSSH</h1><p>OpenSSH 是 <a href="https://baike.baidu.com/item/SSH" target="_blank" rel="noopener">SSH</a> （Secure <a href="https://baike.baidu.com/item/SHell" target="_blank" rel="noopener">SHell</a>） 协议的免费开源实现。SSH协议族可以用来进行远程控制， 或在计算机之间传送文件。</p><p>OpenSSH 由客户端和服务端组成。</p><ul><li>基于口令的安全验证：知道服务器的帐号密码即可远程登录，口令和数据在传输过程中都会被加密。</li><li>基于密钥的安全验证：此时需要在创建一对密钥，把公有密钥放到远程服务器上自己的宿主目录中，而私有密钥则由自己保存。</li></ul><p>检查软件是否安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache policy openssh-client openssh-server</span><br></pre></td></tr></table></figure><p>安装服务端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>安装客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-client</span><br></pre></td></tr></table></figure><p>OpenSSH 服务器的主要配置文件为 <code>/etc/ssh/sshd\_config</code>，几乎所有的配置信息都在此文件中。</p><h1 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h1><p>Xshell [1]  是一个强大的安全终端模拟软件，它支持SSH1, SSH2, 以及Microsoft Windows 平台的TELNET 协议。Xshell 通过互联网到远程<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151" target="_blank" rel="noopener">主机</a>的安全连接以及它创新性的设计和特色帮助用户在复杂的网络环境中享受他们的工作。</p><p>Xshell可以在Windows界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。除此之外，其还有丰富的外观配色方案以及样式选择。</p><p>下载：<a href="https://xshell.en.softonic.com/" target="_blank" rel="noopener">https://xshell.en.softonic.com/</a></p><p>安装过程就不详细说明。</p><h5 id="来源："><a href="#来源：" class="headerlink" title="来源："></a>来源：</h5><p>百度百科</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/09/Linux-远程控制/image1.jpg&quot; title=&quot;Xshell&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;没有安全作为保障，其它先不谈！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Xshell" scheme="http://yoursite.com/tags/Xshell/"/>
    
      <category term="SSH" scheme="http://yoursite.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu-VMware上装</title>
    <link href="http://yoursite.com/2019/01/09/Ubuntu-VMware%E4%B8%8A%E8%A3%85/"/>
    <id>http://yoursite.com/2019/01/09/Ubuntu-VMware上装/</id>
    <published>2019-01-09T07:40:27.000Z</published>
    <updated>2019-01-09T12:37:53.171Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/09/Ubuntu-VMware上装/image1.png"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记笔记的过程，好比建立一条内存索引，大脑只需记住这条索引即可！想想都激动！</p><a id="more"></a><p>Ubuntu（友帮拓、优般图、乌班图）是一个以<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2" target="_blank" rel="noopener">桌面</a>应用为主的开源GNU/Linux操作系统，Ubuntu 是基于<a href="https://baike.baidu.com/item/Debian" target="_blank" rel="noopener">Debian</a>GNU/<a href="https://baike.baidu.com/item/Linux" target="_blank" rel="noopener">Linux</a>，支持x86、amd64（即x64）和<a href="https://baike.baidu.com/item/ppc/150" target="_blank" rel="noopener">ppc</a>架构，由全球化的专业开发团队（Canonical Ltd）打造的。 [1] </p><p>其名称来自非洲南部<a href="https://baike.baidu.com/item/%E7%A5%96%E9%B2%81%E8%AF%AD/7274976" target="_blank" rel="noopener">祖鲁语</a>或豪萨语的“ubuntu”一词 [2]  ，类似儒家“仁爱”的思想，意思是“人性”、“我的存在是因为大家的存在”，是非洲传统的一种价值观。</p><p>（来源：百度百科）</p><p>原生云应用基本都是基于云服务器部署，本地化的 Linux 操作基本也都是在虚拟机中进行模拟操作。因此我们先安装虚拟机，然后在虚拟机上安装对应的 Linux 操作系统（Ubuntu）。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="VMware安装"><a href="#VMware安装" class="headerlink" title="VMware安装"></a>VMware安装</h2><p>可自行查阅安装。</p><h2 id="Ubuntu-Server安装"><a href="#Ubuntu-Server安装" class="headerlink" title="Ubuntu Server安装"></a>Ubuntu Server安装</h2><p>一方面网上热心人士整理相关攻略较多，二来安装过程基本也是跟着next走。这里就简单介绍下Ubuntu的安装流程，也就给自己建立一个索引，以便来日快速上手。</p><p>版本：</p><p>VMwareworkstation64_14.1.0.27582</p><p>ubuntu-16.04-server-amd64.iso</p><p>step 1</p><p>打开VMware</p><img src="/2019/01/09/Ubuntu-VMware上装/1.jpg"><p>step 2</p><p>选择自定义安装</p><img src="/2019/01/09/Ubuntu-VMware上装/2.jpg"><p>step 3</p><p>选择Workstation 14.x</p><img src="/2019/01/09/Ubuntu-VMware上装/3.jpg"><p>step 4</p><p>选择稍后安装，以便后面设置相关信息。</p><img src="/2019/01/09/Ubuntu-VMware上装/4.jpg"><p>step 5</p><p>虚拟机命名，建议使用Ubuntu Server X64这样的方式。位置选择，优先选择SSD，路径命名上建议使用\VMware\Ubuntu Server X64这样的方式。强调这样的命名方式，只要是方便文件的管理。</p><img src="/2019/01/09/Ubuntu-VMware上装/5.jpg"><p>step 6</p><p>选择NAT</p><img src="/2019/01/09/Ubuntu-VMware上装/6.jpg"><p>step 7</p><img src="/2019/01/09/Ubuntu-VMware上装/7.jpg"><p>step 8</p><img src="/2019/01/09/Ubuntu-VMware上装/8.jpg"><p>step 9</p><img src="/2019/01/09/Ubuntu-VMware上装/9.jpg"><p>step 10</p><img src="/2019/01/09/Ubuntu-VMware上装/10.jpg"><p>step 11</p><img src="/2019/01/09/Ubuntu-VMware上装/11.jpg"><p>step 12</p><img src="/2019/01/09/Ubuntu-VMware上装/12.jpg"><p>step 13</p><img src="/2019/01/09/Ubuntu-VMware上装/13.jpg"><p>step 14</p><img src="/2019/01/09/Ubuntu-VMware上装/14.jpg"><p>step 15</p><img src="/2019/01/09/Ubuntu-VMware上装/15.jpg"><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>以上只是安装过程中的部分截图，供参考！其它的安装选项基本保持默认选项即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/09/Ubuntu-VMware上装/image1.png&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;记笔记的过程，好比建立一条内存索引，大脑只需记住这条索引即可！想想都激动！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Linux-简介</title>
    <link href="http://yoursite.com/2019/01/09/Linux-%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2019/01/09/Linux-简介/</id>
    <published>2019-01-09T07:22:57.000Z</published>
    <updated>2019-01-09T07:42:32.591Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/09/Linux-简介/image1.png"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。</p><a id="more"></a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Linux是一套免费使用和自由传播的<a href="https://baike.baidu.com/item/%E7%B1%BBUnix" target="_blank" rel="noopener">类Unix</a><a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192" target="_blank" rel="noopener">操作系统</a>，是一个基于<a href="https://baike.baidu.com/item/POSIX" target="_blank" rel="noopener">POSIX</a>和<a href="https://baike.baidu.com/item/UNIX" target="_blank" rel="noopener">UNIX</a>的多用户、<a href="https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1/1011764" target="_blank" rel="noopener">多任务</a>、支持<a href="https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1190404" target="_blank" rel="noopener">多线程</a>和多<a href="https://baike.baidu.com/item/CPU" target="_blank" rel="noopener">CPU</a>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持<a href="https://baike.baidu.com/item/32%E4%BD%8D/5812218" target="_blank" rel="noopener">32位</a>和<a href="https://baike.baidu.com/item/64%E4%BD%8D" target="_blank" rel="noopener">64位</a>硬件。Linux继承了<a href="https://baike.baidu.com/item/Unix" target="_blank" rel="noopener">Unix</a>以<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C/143243" target="_blank" rel="noopener">网络</a>为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><p>Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了<a href="https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8" target="_blank" rel="noopener">Linux内核</a>。Linux可安装在各种计算机硬件设备中，比如<a href="https://baike.baidu.com/item/%E6%89%8B%E6%9C%BA/6342" target="_blank" rel="noopener">手机</a>、<a href="https://baike.baidu.com/item/%E5%B9%B3%E6%9D%BF%E7%94%B5%E8%84%91/1348389" target="_blank" rel="noopener">平板电脑</a>、<a href="https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E5%99%A8/108294" target="_blank" rel="noopener">路由器</a>、视频游戏控制台、台式计算机、大型机和超级计算机。</p><p>严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用<a href="https://baike.baidu.com/item/GNU" target="_blank" rel="noopener">GNU</a>工程各种工具和数据库的操作系统。</p><p>目前市面上较知名的发行版有：<code>Ubuntu</code>、RedHat、<code>CentOS</code>、Debian、Fedora、SuSE、OpenSUSE、TurboLinux、BluePoint、RedFlag、Xterm、SlackWare等。</p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p>百度百科</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/09/Linux-简介/image1.png&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="基础设施即服务(IaaS)" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E5%8D%B3%E6%9C%8D%E5%8A%A1-IaaS/"/>
    
  </entry>
  
  <entry>
    <title>Docker-初识</title>
    <link href="http://yoursite.com/2019/01/08/Docker-%E5%88%9D%E8%AF%86/"/>
    <id>http://yoursite.com/2019/01/08/Docker-初识/</id>
    <published>2019-01-08T14:56:07.000Z</published>
    <updated>2019-01-09T12:35:53.116Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/08/Docker-初识/image1.jpg" title="This is an example image"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>确认过眼神，这就是想要的！</p><a id="more"></a><p>百度百科释：</p><p>Docker 是一个<a href="https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/246339" target="_blank" rel="noopener">开源</a>的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 <a href="https://baike.baidu.com/item/Linux" target="_blank" rel="noopener">Linux</a> 机器上，也可以实现<a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E5%8C%96/547949" target="_blank" rel="noopener">虚拟化</a>。容器是完全使用<a href="https://baike.baidu.com/item/%E6%B2%99%E7%AE%B1/393318" target="_blank" rel="noopener">沙箱</a>机制，相互之间不会有任何接口。</p><h1 id="What"><a href="#What" class="headerlink" title="What ?"></a>What ?</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>Docker 是 <a href="https://baike.baidu.com/item/PaaS" target="_blank" rel="noopener">PaaS</a> 提供商 dotCloud 开源的一个基于 <a href="https://baike.baidu.com/item/LXC" target="_blank" rel="noopener">LXC</a> 的高级容器引擎，源代码托管在 <a href="https://baike.baidu.com/item/Github" target="_blank" rel="noopener">Github</a> 上, 基于<a href="https://baike.baidu.com/item/go%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">go语言</a>并遵从Apache2.0协议开源。</p><p>Docker自2013年以来非常火热，无论是从 github 上的代码活跃度，还是<a href="https://baike.baidu.com/item/Redhat" target="_blank" rel="noopener">Redhat</a>在RHEL6.5中集成对Docker的支持, 就连 Google 的 Compute Engine 也支持 docker 在其之上运行。</p><p>一款开源软件能否在商业上成功，很大程度上依赖三件事 - 成功的 user case(用例), 活跃的社区和一个好故事。 dotCloud 自家的 PaaS 产品建立在<a href="https://baike.baidu.com/item/docker" target="_blank" rel="noopener">docker</a>之上，长期维护且有大量的用户，社区也十分活跃，接下来我们看看docker的故事。</p><ul><li>环境管理复杂 - 从各种OS到各种中间件到各种app, 一款产品能够成功作为开发者需要关心的东西太多，且难于管理，这个问题几乎在所有现代IT相关行业都需要面对。</li><li>云计算时代的到来 - AWS的成功, 引导开发者将应用转移到 cloud 上, 解决了硬件管理的问题，然而中间件相关的问题依然存在 (所以openstack HEAT和 AWS cloudformation 都着力解决这个问题)。开发者思路变化提供了可能性。</li><li>虚拟化手段的变化 - cloud 时代采用标配硬件来降低成本，采用虚拟化手段来满足用户按需使用的需求以及保证可用性和隔离性。然而无论是KVM还是Xen在 docker 看来,都在浪费资源，因为用户需要的是高效运行环境而非OS, GuestOS既浪费资源又难于管理, 更加轻量级的LXC更加灵活和快速</li><li>LXC的移动性 - LXC在 linux 2.6 的 kernel 里就已经存在了，但是其设计之初并非为云计算考虑的，缺少标准化的描述手段和容器的可迁移性，决定其构建出的环境难于迁移和标准化管理(相对于KVM之类image和snapshot的概念)。docker 就在这个问题上做出实质性的革新。这是docker最独特的地方。</li></ul><img src="/2019/01/08/Docker-初识/image2.jpg" title="This is an example image"><p>面对上述几个问题，docker设想是交付运行环境如同海运，OS如同一个货轮，每一个在OS基础上的软件都如同一个集装箱，用户可以通过标准化手段自由组装运行环境，同时集装箱的内容可以由用户自定义，也可以由专业人员制造。这样，交付一个软件，就是一系列标准化组件的集合的交付，如同乐高积木，用户只需要选择合适的积木组合，并且在最顶端署上自己的名字(最后一个标准化组件是用户的app)。这也就是基于docker的PaaS产品的原型。</p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。Docker 容器通过 Docker 镜像来创建。容器与镜像的关系类似于面向对象编程中的对象与类。 [3] </p><table><thead><tr><th>Docker</th><th>面向对象</th></tr></thead><tbody><tr><td>容器</td><td>对象</td></tr><tr><td>镜像</td><td>类</td></tr></tbody></table><p>Docker采用 C/S架构 Docker daemon 作为服务端接受来自客户的请求，并处理这些请求（创建、运行、分发容器）。 客户端和服务端既可以运行在一个机器上，也可通过 socket 或者RESTful API 来进行通信。</p><p>Docker daemon 一般在宿主主机后台运行，等待接收来自客户端的消息。 Docker 客户端则为用户提供一系列可执行命令，用户用这些命令实现跟 Docker daemon 交互。</p><img src="/2019/01/08/Docker-初识/image3.jpg" title="This is an example image"><h1 id="Why"><a href="#Why" class="headerlink" title="Why ?"></a>Why ?</h1><h2 id="更高效的利用系统资源"><a href="#更高效的利用系统资源" class="headerlink" title="更高效的利用系统资源"></a>更高效的利用系统资源</h2><p>由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。因此，相比虚拟机技术，一个相同配置的主机，往往可以运行更多数量的应用。</p><h2 id="更快速的启动时间"><a href="#更快速的启动时间" class="headerlink" title="更快速的启动时间"></a>更快速的启动时间</h2><p>传统的虚拟机技术启动应用服务往往需要数分钟，而 Docker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒级、甚至毫秒级的启动时间。大大的节约了开发、测试、部署的时间。</p><h2 id="一致的运行环境"><a href="#一致的运行环境" class="headerlink" title="一致的运行环境"></a>一致的运行环境</h2><p>开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一致，导致有些 bug 并未在开发过程中被发现。而 Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性，从而不会再出现 <em>「这段代码在我机器上没问题啊」</em> 这类问题。</p><h2 id="持续交付和部署"><a href="#持续交付和部署" class="headerlink" title="持续交付和部署"></a>持续交付和部署</h2><p>对开发和运维（<a href="https://zh.wikipedia.org/wiki/DevOps" target="_blank" rel="noopener">DevOps</a>）人员来说，最希望的就是一次创建或配置，可以在任意地方正常运行。</p><p>使用 Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通过 <code>Dockerfile</code>来进行镜像构建，并结合 <a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank" rel="noopener">持续集成(Continuous Integration)</a> 系统进行集成测试，而运维人员则可以直接在生产环境中快速部署该镜像，甚至结合 <a href="https://en.wikipedia.org/wiki/Continuous_delivery" target="_blank" rel="noopener">持续部署(Continuous Delivery/Deployment)</a> 系统进行自动部署。</p><p>而且使用 <code>Dockerfile</code> 使镜像构建透明化，不仅仅开发团队可以理解应用运行环境，也方便运维团队理解应用运行所需条件，帮助更好的生产环境中部署该镜像。</p><h2 id="更轻松的迁移"><a href="#更轻松的迁移" class="headerlink" title="更轻松的迁移"></a>更轻松的迁移</h2><p>由于 Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环境的变化导致应用无法正常运行的情况。</p><h2 id="更轻松的维护和扩展"><a href="#更轻松的维护和扩展" class="headerlink" title="更轻松的维护和扩展"></a>更轻松的维护和扩展</h2><p>Docker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。此外，Docker 团队同各个开源项目团队一起维护了一大批高质量的 <a href="https://store.docker.com/search?q=&amp;source=verified&amp;type=image" target="_blank" rel="noopener">官方镜像</a>，既可以直接在生产环境使用，又可以作为基础进一步定制，大大的降低了应用服务的镜像制作成本。</p><h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><p><a href="https://baike.baidu.com/item/Docker/13344470?fr=aladdin#1_3" target="_blank" rel="noopener">https://baike.baidu.com/item/Docker/13344470?fr=aladdin#1_3</a></p><p><a href="https://zh.wikipedia.org/wiki/Docker" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Docker</a></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/08/Docker-初识/image1.jpg&quot; title=&quot;This is an example image&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;确认过眼神，这就是想要的！&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-杂记</title>
    <link href="http://yoursite.com/2019/01/08/Hexo-%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/01/08/Hexo-杂记/</id>
    <published>2019-01-08T08:52:30.000Z</published>
    <updated>2019-01-09T03:05:49.970Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中文文档地址"><a href="#中文文档地址" class="headerlink" title="中文文档地址"></a>中文文档地址</h1><p><a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs</a></p><h1 id="自定义中文表述"><a href="#自定义中文表述" class="headerlink" title="自定义中文表述"></a>自定义中文表述</h1><p>在/themes/next/languages/zh-CN.yml文件中定义即可</p><h1 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h1><p>在主题的配置文件中搜索Canvas-nest，下面有几种动态背景可设置。</p><p>其中canvas_nest只需将enable属性设置为true，即可。</p><p>另外三种JavaScript 3D library设置方式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Step 1 </span><br><span class="line">$ cd themes/next</span><br><span class="line"></span><br><span class="line">Step 2 </span><br><span class="line">$ git clone https://github.com/theme-next/theme-next-three source/lib/three</span><br><span class="line"></span><br><span class="line">Step 3 → Set it up</span><br><span class="line">Enable module in NexT _config.yml file:</span><br><span class="line"></span><br><span class="line">three_waves: true</span><br><span class="line">OR</span><br><span class="line">canvas_lines: true</span><br><span class="line">OR</span><br><span class="line">canvas_sphere: true</span><br><span class="line"></span><br><span class="line">step 4 Update</span><br><span class="line">$ cd themes/next/source/lib/three</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h1 id="更换背景图片"><a href="#更换背景图片" class="headerlink" title="更换背景图片"></a>更换背景图片</h1><p>先将选好的图片放入主题source文件下的images文件夹下面，让后找到\themes\next\source\css\_custom下的custom.styl文件，添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123; background:url(/images/backimage.png);&#125;</span><br></pre></td></tr></table></figure><p>另外如果想要每次刷新，背景图能更换则配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    background:url(https://source.unsplash.com/1920x1080/?nature);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:50% 50%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图片类型可进入官网：<a href="https://source.unsplash.com/" target="_blank" rel="noopener">https://source.unsplash.com</a>自己挑选。</p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">step 1</span><br><span class="line">cd /blog</span><br><span class="line"></span><br><span class="line">step 2</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line">step 2</span><br><span class="line">更改hexo配置文件如下：</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><h1 id="设置左边菜单栏"><a href="#设置左边菜单栏" class="headerlink" title="设置左边菜单栏"></a>设置左边菜单栏</h1><p>进入主题的配置文件，找到menu,将注释的打开，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: / || home</span><br><span class="line">  关于: /about/ || user</span><br><span class="line">  标签: /tags/ || tags</span><br><span class="line">  分类: /categories/ || th</span><br><span class="line">  归档: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><h1 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h1><p>进入主题的配置文件，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  url: /images/avatar1.JPG</span><br><span class="line">  rounded: true</span><br><span class="line">  opacity: 1</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure><p>让后将avatar1.JPG图片放进主题的source文件夹下的images文件中。</p><h1 id="文章底部tag前的-替换"><a href="#文章底部tag前的-替换" class="headerlink" title="文章底部tag前的#替换"></a>文章底部tag前的#替换</h1><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h1 id="主页添加阴影"><a href="#主页添加阴影" class="headerlink" title="主页添加阴影"></a>主页添加阴影</h1><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line">.post &#123;</span><br><span class="line">margin-top: 60px;</span><br><span class="line">margin-bottom: 60px;</span><br><span class="line">padding: 25px;</span><br><span class="line">-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h1><p>将制作好的图标放进/themes/next/source/images里，让后到主题配置文件中修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br></pre></td></tr></table></figure><p>未完待续,,,,,,,,</p>]]></content>
    
    <summary type="html">
    
      俗话说“好记性，不如烂笔头”。关于Hexo一些小的使用技巧和注意事项就全放在这里吧！
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-分享</title>
    <link href="http://yoursite.com/2019/01/08/Hexo-%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2019/01/08/Hexo-分享/</id>
    <published>2019-01-08T07:06:38.000Z</published>
    <updated>2019-01-08T13:12:37.955Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/08/Hexo-分享/image1.jpg" title="This is an example image"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有时候我们宁可花大把时间google和百度，也不愿看看官方文档！论能看，会看文档的重要性！</p><a id="more"></a><p>打开Hexo主题站点的资源文件（即主题的source文件）中的配置文件，官方配置了三种不同的分享方式：</p><ul><li>Baidu Share</li><li>AddThis Share</li><li>NeedMoreShare2</li></ul><p>其中_config.yml文件中也明确说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: Baidu Share does not support https.</span><br></pre></td></tr></table></figure><p>说是BaiduShare不支持https，那能使用Baidu Share吗？答案肯定是可以得，就是麻烦些。</p><p>这里只说明NeedMoreShare2和Baidu Share两种方式的分享配置。</p><h1 id="NeedMoreShare2-配置"><a href="#NeedMoreShare2-配置" class="headerlink" title="NeedMoreShare2 配置"></a>NeedMoreShare2 配置</h1><p>正当思考着如何下手时，瞟见_config.yml文件给出了如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># NeedMoreShare2</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-needmoreshare2</span><br></pre></td></tr></table></figure><p>那就先看看github。果然很靠谱，内容整理如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Step 1</span><br><span class="line">$ cd themes/next</span><br><span class="line"></span><br><span class="line">Step 2</span><br><span class="line">$ git clone https://github.com/theme-next/theme-next-needmoreshare2 source/lib/needsharebutton</span><br><span class="line"></span><br><span class="line">Step 3</span><br><span class="line">打开 NexT 的 _config.yml 文件，更改配置如下:</span><br><span class="line">needmoreshare2:</span><br><span class="line">  enable: true</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: true</span><br><span class="line">  float:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><p>嗯，就这样完事，5分钟不到哈！</p><h1 id="Baidu-Share"><a href="#Baidu-Share" class="headerlink" title="Baidu Share"></a>Baidu Share</h1><p>Baidu Share在另一个LandScape主题里有配置，当前使用的是NexT主题，配置的是NeedMoreShare2，但还是记录下如何解决如下问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: Baidu Share does not support https.</span><br></pre></td></tr></table></figure><p>方案比较粗暴：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">step 1</span><br><span class="line">打开http://share.baidu.com/code网站，复制分享代码</span><br><span class="line"></span><br><span class="line">step 2</span><br><span class="line">打开themes\landscape\layout_partial\article.ejs，找到“&lt;footer class=&quot;article-footer&quot;&gt;”标签并将标签对包含代码替换为百度分享代码</span><br><span class="line"></span><br><span class="line">并将上面替换后的百度分享里的src做如下修改：</span><br><span class="line">src=&apos;/static/api/js/share.js?v=89860593.js 其它不动</span><br><span class="line"></span><br><span class="line">step 3</span><br><span class="line">下载static文件：https://github.com/hrwhisper/baiduShare </span><br><span class="line">解压后将static文件放到\themes\landscape\source路径下</span><br></pre></td></tr></table></figure><p>完成配置。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>个人更加喜欢NeedMoreShare2。使用命令一顿操作，配置简洁优雅，让人心情愉悦。百度分享，由于does not support https问题，破坏了轮子的使用平滑度，中间还需要找方案解决问题，让惜时如金的程序狗有点不爽！</p><p>（以上为个人操作，仅供参考！）</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/08/Hexo-分享/image1.jpg&quot; title=&quot;This is an example image&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;有时候我们宁可花大把时间google和百度，也不愿看看官方文档！论能看，会看文档的重要性！&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-上手</title>
    <link href="http://yoursite.com/2019/01/08/Hexo-%E4%B8%8A%E6%89%8B/"/>
    <id>http://yoursite.com/2019/01/08/Hexo-上手/</id>
    <published>2019-01-08T07:05:38.000Z</published>
    <updated>2019-01-08T14:58:53.856Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/01/08/Hexo-上手/image1.jpg" title="This is an example image"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>高中老师曾说过一句话：“一听就懂，一看就会，一做就错”，来形容学生眼高手低。编程做项目亦是如此。写Blog不（就）是为了BG，而是检验自己对项目技术理解程度。</p><a id="more"></a><p>目前比较流行的Blog框架如下：</p><ul><li>Jekyll (<a href="https://jekyllrb.com/" target="_blank" rel="noopener">https://jekyllrb.com/</a>)</li><li>hugo (<a href="http://www.gohugo.org/" target="_blank" rel="noopener">http://www.gohugo.org/</a>)</li><li>django (<a href="https://www.djangoproject.com/" target="_blank" rel="noopener">https://www.djangoproject.com/</a>)</li><li>hexo (<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a>)</li></ul><p>这里选择Hexo（别问为什么，反正我是没收广告费的）。当然，如果你是python学习者,请选择django。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><h2 id="设置npm镜像"><a href="#设置npm镜像" class="headerlink" title="设置npm镜像"></a>设置npm镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><h2 id="Github账号"><a href="#Github账号" class="headerlink" title="Github账号"></a>Github账号</h2><h2 id="创建博客仓库"><a href="#创建博客仓库" class="headerlink" title="创建博客仓库"></a>创建博客仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：比如你的github账号为zhanshang，那么仓库名应为zhangshang.github.io</span><br></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><h2 id="公匙添加到github上"><a href="#公匙添加到github上" class="headerlink" title="公匙添加到github上"></a>公匙添加到github上</h2><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装hexo，我这里是cd进D:\DEV\myhexo路径安装的hexo,可根据自己习惯安装。</span><br><span class="line">npm install hexo-cli g</span><br><span class="line"># 初始化博客文件夹</span><br><span class="line">hexo init blog</span><br><span class="line"># 切换到该路径</span><br><span class="line">cd blog</span><br><span class="line"># 安装hexo的扩展插件</span><br><span class="line">npm install</span><br><span class="line"># 安装其它插件</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h1 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h1><p>打开终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 开启本地服务器</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，地址栏中输入：<strong><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></strong></p><h1 id="将hexo博客上传到github上"><a href="#将hexo博客上传到github上" class="headerlink" title="将hexo博客上传到github上"></a>将hexo博客上传到github上</h1><p>1.先进入D:\DEV\myhexo\blog路径下，打开_config.yml配置文件，将deploy修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Deployment 注释</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库</span><br><span class="line">  repo: git@github.com:github_name/github_name.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br><span class="line">  </span><br><span class="line">注意：冒号后面都要有空格</span><br></pre></td></tr></table></figure><p>2.在终端依次输入如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清空静态页面</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 部署 </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>3.在浏览器地址栏输入：<a href="http://github_name.github.io,正常无误即可看见部署好的Blog页面。" target="_blank" rel="noopener">http://github_name.github.io,正常无误即可看见部署好的Blog页面。</a></p><h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><p>当运行hexo clean 后，此D:\DEV\myhexo\blog路径下的public文件将被清除；</p><p>运行hexo generate后，将重新生成public文件；</p><p>如果需要修改title /subtitle 等信息，进入D:\DEV\myhexo\blog路径下的_config.yml文件修改；</p><p>如果需要更换主题，进入D:\DEV\myhexo\blog路径下的themes文件操作，但别忘记更改_config.yml文件中的theme: landscape值。</p><h1 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h1><p>一顿操作下来，Hexo给人的感觉还是非常爽的！简单易上手，hexo clean,hexo g,hexo d,三步操作，敲着完全停不下来（有种爱上写博客的假象）。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/01/08/Hexo-上手/image1.jpg&quot; title=&quot;This is an example image&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;高中老师曾说过一句话：“一听就懂，一看就会，一做就错”，来形容学生眼高手低。编程做项目亦是如此。写Blog不（就）是为了BG，而是检验自己对项目技术理解程度。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
